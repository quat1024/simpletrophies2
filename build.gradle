buildscript {
    repositories {
        maven { url "https://maven.minecraftforge.net" }
//        maven {
//            url "https://repo.spongepowered.org/repository/maven-public/"
//            content { includeGroup "org.spongepowered" }
//        }
        mavenCentral()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:6.0.29"
//        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

//plugins
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
//apply plugin: "org.spongepowered.mixin"

//metadata
group = "agency.highlysuspect"
version = "1.0"
archivesBaseName = "simple-trophies-2-forge-1.20.1"

//jdk
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}
java.withSourcesJar()

//mixin
//mixin {
//    add sourceSets.main, "simpletrophies2.refmap.json"
//    config "simpletrophies2.mixins.json"
//}

//deps
repositories {
//    maven {
//        url "https://repo.spongepowered.org/repository/maven-public/"
//        content { includeGroup "org.spongepowered" }
//    }
    mavenCentral()
}
dependencies {
    minecraft "net.minecraftforge:forge:1.20.1-47.1.3"
//    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    compileOnly "org.jetbrains:annotations:24.0.1"
}

//processing
processResources {
    inputs.property "version", project.version
    filesMatching("**/mods.toml") {
        expand "version": project.version
    }
}

//mc
minecraft {
    mappings channel: "official", version: "1.20.1"
    
    runs {
        client {
            taskName "Client"
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                "simpletrophies2" { source sourceSets.main }
            }
        }
        
        server {
            taskName "Server"
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            mods {
                "simpletrophies2" { source sourceSets.main }
            }
        }
    }
}

//mystery
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}